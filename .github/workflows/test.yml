# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Test

on:
  push:
    branches: 
      - main
  # pull_request:
  #   branches: 
  #     - main

permissions:
  contents: read

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.18", "1.19", "1.20", "1.21", "1.22"]
        include:
          - os: ubuntu-latest
            go-build: ~/.cache/go-build
          - os: macos-latest
            go-build: ~/Library/Caches/go-build
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on
      GOPROXY: https://proxy.golang.org
    steps:
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
        cache: false
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
    - uses: actions/cache@v4
      with:
        path: | 
          ${{ matrix.go-build }}
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{hashFiles('**/go.sum')}}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Test
      run: | 
        go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{ matrix.os }},go-${{ matrix.go }}


